@ 객체 배열
-> 생성된 객체를 배열에 넣어 객체 배열 형태로 활용도 가능함

var 배열명 = []; // 번 배열 생성

var 객체1 = {key:value, key:value, ...};
var 객체2 = {key:value, key:value, ...};
var 객체3 = {key:value, key:value, ...};

배열명.push(객체1);
배열명.push(객체2);
배열명.push(객체3);

───────────────────────────────────────────────────────────────────────────

@ 함수활용 객체 생성
-> 함수의 매개변수에 필요한 속성값을 다 받아서 객체를 생성 후 객체 리턴

function 함수명(value1, value2, value3){
    var 객체명 ={
            key1:value1,
            key2:value2,
            key3:value3,
    }
    return 객체명;
}

───────────────────────────────────────────────────────────────────────────

@ BOM
-> Browser Object Model 의 약자로써 브라우저 객체 모델이라고 부름
-> 브라우저의 정보나 URL 정보, 모니터 화면 정보 등을 취득하거나 제어할 수 있는 객체
-> 브라우저 객체의 최상위 객체는 window 객체
-> window 하위 객체는 document, location, screen, history, navigator가 있음
-> document 객에는 DOM(Document Object Model) 객체에 속함

@ window 객체
-> 자바스크립트에서 최상위 객체 최상위 객체
-> 생성되는 모든 객체가 window 객체 하위에 존재함
-> 브라우저 창에 대한 객체

───────────────────────────────────────────────────────────────────────────

## window open 함수 ##
-> 별도의 브라우저 창을 새롭게 열 때 사용하는 함수
-> 높이와 너비를 입력하면 팝업창 형태로 해당 크기를 가지고 띄워짐

첫번째 인수값 "주소"
두번째 인수값 "열릴 경로"
세번째 인수값 "형태(옵션)"

※ window.close() 함수는 브라우저를 종료함

## window.setTimeout(함수, 시간(ms)) ##
-> 일정시간 후 함수를 한번 실행

## window.setInterval(함수, 시간(ms)) ##
-> 일정 시간마다 함수를 계속 반복 실행