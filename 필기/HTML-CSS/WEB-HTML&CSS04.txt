@ 문자열 속성 선택자
-> 특정 문자열을 확인하여 스타일을 적용하는 방식으로 특별한 경우에만 사용

선택자[속성~=값] : 속성값이 특정 값을 단어로 포하는 태그 선택 (띄어쓰기 구분)
선택자[속성|=값] : 속성값이 특정 값을 단어로 포하는 태그 선택 ('-'으로 구분)   
                    (0 앞의 내용 값이 동일 해야 함)
                    -> name 이든, class 이든 선언시 -로 구성된 것 이어야 함

선택자[속성^=값] : 속성값이 특정 값으로 시작하는 태그 선택
선택자[속성$=값] : 속성값이 특정 값으로 끝나는 태그 선택
선택자[속성*=값] : 속성값이 특정 값을 포함하는 태그 선택


@ 후손 선택자 / 자손 선택자
-> 후손은 내 아래 모든 것
-> 자손은 내 직속 아래

<body>
    <div>
        <h1></h1>
        <h2></h2>
        <ul>
            <li></li>
            <li></li>
        </ul>
    </div>
</body>

-> div 입장에서는 h1, h2, ul 태그가 자손 태그
-> div 입장에서 li 태그는 자손 태그는 아니지만 후손 태그라고 볼 수 있음

사용법

후손 선택자
-> 선택자 후손선택자 { 설정내용; }

자손 선택자
-> 선택자 > 자손선택자 { 설정내용; }

※ 여러개의 자손 선택 가능 (선택자 > 자손 > 자손 ....)

@ 동위 선택자
-> 동위 관계에서 뒤에 위치한 태그를 선택 할 때 사용

동위선택자a + 동위선택자b : 동위선택자a의 바로 뒤에 있는 한개의 선택자만 선택
동위선택자a ~ 동위선택자b : 동위선택자a의 뒤에 있는 선택자 b 모두 선택

※ 같은 자손(형제) 끼리는 동위 관계

<div>
    <h1></h1>
    <p></p>
    <p></p>
    <ul>
        <li></li>
        <li></li>
    </ul>
</div>

@ 반응 선택자
-> 사용자의 움직임에 따라 달라지는 선택자

선택자:active -> 사용자가 클릭한 태그 선택
선택자:hover -> 사용자의 마우스가 올라가 있는 태그 선택

기본형식

선택자:active { 설정내용; }
선택자:hover { 설정내용; }

@ 상태 선택자

-> 입력 양식의 상태에 따라 선택되는 선택자

input태그:checked -> 체크 상태의 input 태그 선택
input태그:focus -> 초점이 맞추어진 input 태그 선택

option태그:enabled -> 사용 가능한 option 태그 선택
option태그:disabled -> 사용 불가능한 option 태그 선택

@ 일반 구조 선택자
-> 특정한 위치에 있는 태그 선택 (위치로만 구분)

:first-child -> 형제 관계 태그 중 첫번째 태그 선택
:last-child -> 형제 관계 태그 중 마지막 태그 선택
:nth-child(수열) -> 형제 관계 태그 중 앞에서 수열 번째 태그 선택
:nth-last-child(수열) -> 형제 관계 태그 중 뒤에서 수열 번째 태그 선택

@ 형태 구조 선택자
-> 특정한 위치에 있는 태그 선택 (태그 별로 구분)
:first-of-type -> 형제 관계 태그 중 첫번째 태그 선택
:last-of-type -> 형제 관계 태그 중 마지막 태그 선택
:nth-of-type(수열) -> 형제 관계 태그 중 앞에서 수열 번째 태그 선택
:nth-last-of-type(수열) -> 형제 관계 태그 중 뒤에서 수열 번째 태그 선택

@ 링크 선택자
-> 링크(href)가 걸려있는 태그를 선택하는 선택자

:link -> 방문 전(링크를 가기 전 상태) 링크 선택자
:visited -> 방문 후(링크를 간적 있는 상태) 링크 선택자

@ 문자 선택자
-> 태그 내부에서 특정 조건의 문자를 선택하는 선택자

선택자 -> :first-letter -> 첫 번째 글자를 선택
선택자 -> :first-line -> 첫 번째 줄을 선택
선택자 -> :after -> 태그 뒤에 위치하는 공간을 선택
선택자 -> :before -> 태그 앞에 위치하는 공간을 선택
선택자 -> :selection -> 사용자가 드래그한 글자 선택

@ 부정 선택자
-> 선택자를 제외한 나머지를 말함

요소 not(선택자)

@ CSS 우선 순위

## 적용 방법에 따른 우선 순위 ##
스타일 태그 < class 스타일 < id 스타일 < 인라인 스타일 < !important

※ !important가 가장 높은 우선 순위를 가짐

## 동일한 선택자 일시 우선 순위

-> 나중에 작성된 스타일이 최종 적용 됨

@ CSS 단위 구성

상대 크기
-> % : 기본 설정된 크기에서 상대적인 크기 설정 (초기설정 100%)
-> em : 부모 요소의 크기가 기준이 됨 (배수를 의미) 1배 = 1em = 100%, 1.5배 = 1.5em = 150%, 

절대 크기
-> px : 기본 지정된 크기
-> pt : 기본 지정된 크기 (포인트 값)

※ http://pxtoem.com

@ 생산 표현
영문식 이름 : 영문으로 색 이름을 작성
    -> red, black, blue, orange 등등

16진수 표현 : RGB 값을 기준으로 
#16 진수 3자리 입력 
ex) #ff0000(빨간색)

rgb/rgba : RGB값을 0~255로 입력, RGBA는 투명도 표현도 가능
    -> rgb(0~255, 0~255, 0~255) 입력 예시) rgb(255, 0, 0)
    -> rgba(255, 0, 0, 0~1) 입력
    -> rgba는 투명도 표시 (투명:0 / 불투명 : 1 / 반투명 : 0.5)

@ font-family
-> 폰트의 글꼴을 설정해주는 속성
-> 글꼴이름1이 없으면 글꼴2, 글꼴3으로 선택되어 설정 됨
-> 다 없으면 브라우저에게 사용되는 기본 글꼴로 적용 됨

기본 형식

선택자 { font-family : 글꼴1, [글꼴2, 글꼴3]; }

@ font-size
-> 글자의 크기를 조절하는 속성

단위 : em, px, pt 등등...

기본 형식

선택자 { font-size: 숫자단위; }

@ font-weight
-> 글자 굵기를 조절하는 속성

구분 값
normal : 기본 형태
bold : 굵게 표시
bolder : 기본보다 더 굵게 표시
lighter : 기본보다 더 가늘게 표시
100 ~ 900 : 400이 normal 값 700이 bold 값 (세밀한 조절이 가능함)

@ font-variant
-> 소문자 영어를 작은 대문자로 표시해주는 속성

기본 형식

선택자 { font-variant : normal or small-caps; }

@ font-style
-> 글자를 이텔릭체로 표시하는 속성

기본 형식

선택자 { font-size : normal or italic or oblique; }
    ※ italic : 처음부터 기울어진 글자가 존재
    ※ oblique : 기본 글자를 기울여서 표시


@ font
-> 글꼴 속성을 모아서 표현 할 수 있는 스타일 속성
-> font-size와 font-family는 꼭 적어야 함 (나머지는 생략 및 추가 가능함)

선택자 { font:font-style font-variant font-weight font-size/line-height font-family; }

※ line-height는 라인 높이