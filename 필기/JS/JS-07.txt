──────────────────────────────────────────────────────────────────────────────────────────────────

@ DOM
-> Document Object Model
-> 문서 객체라고 함
-> HTML에 있는 태그를 객체화 하여 자바스크립트에서 다룰 수 있게 만든 객체
-> 모든 노드객체에 접근 할 수 있는 요소와 함수를 제공 함

@ 요소노드(element node)와 텍스트 노트(textnode)
-> 요소노드 : 태그 자체를 의미함
-> 텍스트 노드 : 태그에 기록되어 있는 문자를 의미함
    ※ 텍스트 노드를 가지는 태그(h태그 p태그 등등)와 가지지 않는 태그 (img, input 등)가 있음

@ 텍스트 노드가 있는 문서 객체 생성
document.createElement(태그명) 요소노드 생성
document.createTextNode(내용) 텍스트노드 생성
객체명.appendChild(node) 태그에 자손으로 노드를 추가

※ 즉, 자바스크립트를 가지고 태그와 내용을 생성 할 수 있다는 것을 의미함

ex)

<script>
    function myfunc() {
        var test = document.getElementById("test");
        var h1Tag = document.createElement('h1');
        var tNode = document.createTextNode("aaaaaa");
        h1Tag.appendChild(tNode);
        test.appendChild(h1Tag);
    }
</script>

──────────────────────────────────────────────────────────────────────────────────────────────────

@ 텍스트 노트 없는 문서 객체 생성
-> 텍스트 노드가 없는 객체를 생성 할 수 있음 (img, input, 등등)
-> 요소노드 생성은 createElement 함수를 그대로 사용 함

## 해당 노드에 속성 값 부여하기 및 값 가져오기 ##

객체명(변수).속성 = 속성 -> 값 태그에 속성 값 설정
객체명.setAtrribute(속성 명, 속성 값) -> 태그에 속성 값 설정
    -> setAtrribute를 사용하면 사용자 정의 속성 값도 가능함
객체명.getAtrribute(속성 명) -> 태그의 속성 값 확인
객체명.appendChild(node) -> 태그에 자손으로 노드를 추가(기존과 같음)

@ 문서 객체 제거
-> 페이지 내 작성된 문서의 객체(태그)를 제거 하는 것

부모객체명.removeChild(객체명) -> 부모 객체의 자손 태그를 제거
객체명.remove() -> 해당 객체를 제거

──────────────────────────────────────────────────────────────────────────────────────────────────

@ 이벤트
-> 웹 페이지에서 어떤한 행위(사용자의 행동)가 발생한 것을 이벤트 라고 함 ex) onclick

@ 이벤트의 활용
-> 이벤트 속성과 이벤트 핸들러(함수)를 연동하여 이벤트 발생 시 특정 기능을 하도록 할 수 있음


@ 이벤트 설정 방법
-> 고전 이벤트 모델
-> 인라인 이벤트 모델
-> 표준 이벤트 모델

## 고전 이벤트 모델 ##
-> 요소 객체가 가지고 있는 이벤트 속성에 이벤트 핸들러를 연결하는 방법
-> 이름은 고전 이지만 현재에도 많이 사용되는 방법임
-> 이벤트를 제거 할 때에는 속성값에 null을 넣어 주면 됨

ex) 클릭 시 이벤트 기능 설정

var h = document.getElementById('id명');
h.onclick = function(){
    수행기능 설정;
    h.onclick = null; // 이벤트 기능 삭제  (함수 안에 설정 시 1번만 실행 하는 이벤트 임)
}
──────────────────────────────────────────────────────────────────────────────────────────────────

## 인라인 이벤트 모델 ##
-> 요소 내부에 이벤트를 작성 하는 방법
-> 인라인 방식은 <script>태그에 있는 함수를 호출 하는 방식을 선호함

ex) 클릭 이벤트 처리
<button onclick='처리로직'>클릭</button>
혹은
<button onclick='함수호출'>클릭</button>
