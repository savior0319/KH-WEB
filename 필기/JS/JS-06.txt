@ 객체 배열
-> 생성된 객체를 배열에 넣어 객체 배열 형태로 활용도 가능함

var 배열명 = []; // 번 배열 생성

var 객체1 = {key:value, key:value, ...};
var 객체2 = {key:value, key:value, ...};
var 객체3 = {key:value, key:value, ...};

배열명.push(객체1);
배열명.push(객체2);
배열명.push(객체3);

───────────────────────────────────────────────────────────────────────────

@ 함수활용 객체 생성
-> 함수의 매개변수에 필요한 속성값을 다 받아서 객체를 생성 후 객체 리턴

function 함수명(value1, value2, value3){
    var 객체명 ={
            key1:value1,
            key2:value2,
            key3:value3,
    }
    return 객체명;
}

───────────────────────────────────────────────────────────────────────────

@ BOM
-> Browser Object Model 의 약자로써 브라우저 객체 모델이라고 부름
-> 브라우저의 정보나 URL 정보, 모니터 화면 정보 등을 취득하거나 제어할 수 있는 객체
-> 브라우저 객체의 최상위 객체는 window 객체
-> window 하위 객체는 document, location, screen, history, navigator가 있음
-> document 객에는 DOM(Document Object Model) 객체에 속함

@ window 객체
-> 자바스크립트에서 최상위 객체 최상위 객체
-> 생성되는 모든 객체가 window 객체 하위에 존재함
-> 브라우저 창에 대한 객체

───────────────────────────────────────────────────────────────────────────

## window open 함수 ##
-> 별도의 브라우저 창을 새롭게 열 때 사용하는 함수
-> 높이와 너비를 입력하면 팝업창 형태로 해당 크기를 가지고 띄워짐

첫번째 인수값 "주소"
두번째 인수값 "열릴 경로"
세번째 인수값 "형태(옵션)"

※ window.close() 함수는 브라우저를 종료함

## window.setTimeout(함수, 시간(ms)) ##
-> 일정시간 후 함수를 한번 실행

## window.setInterval(함수, 시간(ms)) ##
-> 일정 시간마다 함수를 계속 반복 실행

## clearTimeout(id, clearInterval(id)) 함수 #3
-> clearTimeout 함수는 setTimeout 함수를 종료
-> clearInterval 함수는 setInterval 함술르 종료
-> setTimeout 함수와 setInterval 함수를 실행하면 id 값을 리턴하게 됨
-> 해당 id 값을 가지고 clear 함수들을 이용하여 종료를 설정할 수 있음

───────────────────────────────────────────────────────────────────────────

@ screen 객체
-> client 운영체제 화면에 대한 속성 값을 가지는 객체

height 화면 높이
width 화면 너비
availWidth 실제 화면에서 사용가능한 넓이
availHeight실제 화면에서 사용가능한 높이
colorDepth 사용 가능한 색상 수
pixelDepth 한 픽셀당 비트 수

───────────────────────────────────────────────────────────────────────────

@ location 객체
-> 브라우저의 주소표시줄(URL)과 관련된 객체
-> 프로토콜 종류, 호스트 이름, 문서 위치등의 정보를 가짐

host 호스트 이름과 포트번호
hostname 호스트 이름
href 문서 URL 주소
origin 호스트 이름, 프로토콜, 포트번호
partname 디렉토리 경로
port 포트번호
protocol 프로토콜 종류
search 요청 매개변수

───────────────────────────────────────────────────────────────────────────

## location 메소드 ##

assign('주소') 새로운 페이지 로드(뒤로 가기 가능)
reload() 현재 문서 페이지를 다시 로드
replace('주소') 현재 페이지를 새로운 페이지로 교체(뒤로 가기 불가)

───────────────────────────────────────────────────────────────────────────

## navigator 객체 ##
-> 브라우저에 대한 정보를 가지는 객체

appCodeName : 브라우저 코드명
    -> 최신 브라우저의 대부분은 호환성을 이유로 'Mozila'라고 반환 함
appName : 브라우저 이름
    -> ex)FireFox Chrome Safari IE 모두 Netscape로 출력

appVersion : 브라우저 버전
platform : 사용중인 운영체제
userAgent : 브라우저 전체 정보
geolocation :  위도와 경도를 출력
language : 브라우저 언어

───────────────────────────────────────────────────────────────────────────


